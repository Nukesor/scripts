#!/usr/bin/env bash
set -euo pipefail

# --- CONFIGURATION ---
# Define monitor layouts per host
# Format: declare -A MONITORS=( [left]=MONNAME [middle]=MONNAME [right]=MONNAME )
declare -A MONITORS

HOSTNAME=$(hostname)

case "$HOSTNAME" in
bomb)
    MONITORS=(
        [left]="2"
        [middle]="0"
        [right]="1"
    )
    ;;
# Add more hosts here
# foobar)
#     MONITORS=(
#         [left]="DP-1"
#         [middle]="DP-2"
#         [right]="HDMI-A-1"
#     )
#     ;;
*)
    echo "No monitor layout configured for host '$HOSTNAME'" >&2
    exit 1
    ;;
esac

# --- FUNCTIONS ---
get_active_window() {
    hyprctl activewindow -j
}

get_monitor_of_window() {
    local winjson=$1
    echo "$winjson" | jq -r '.monitor'
}

move_to_neighbor_monitor() {
    local direction=$1
    local active_json=$2
    local current_mon=$(get_monitor_of_window "$active_json")

    # Determine target monitor based on direction + current monitor
    local target_mon=""
    case "$direction" in
    l | left)
        if [[ "$current_mon" == "${MONITORS[middle]}" ]]; then
            target_mon=${MONITORS[left]}
        elif [[ "$current_mon" == "${MONITORS[right]}" ]]; then
            target_mon=${MONITORS[middle]}
        fi
        ;;
    r | right)
        if [[ "$current_mon" == "${MONITORS[middle]}" ]]; then
            target_mon=${MONITORS[right]}
        elif [[ "$current_mon" == "${MONITORS[left]}" ]]; then
            target_mon=${MONITORS[middle]}
        fi
        ;;
    u | up | d | down)
        # Extend here if you have vertical monitor layouts
        ;;
    esac

    if [[ -z "$target_mon" ]]; then
        echo "No target monitor found for move $direction from $current_mon" >&2
        exit 1
    fi

    # Get workspace of target monitor
    local workspace_id=$(hyprctl monitors -j | jq ".[] | select(.id==$target_mon).activeWorkspace.id")
    if [[ -z "$workspace_id" || "$workspace_id" == "null" ]]; then
        echo "Could not determine workspace for $target_mon" >&2
        exit 1
    fi

    # Move the window to target workspace
    hyprctl dispatch movetoworkspace "$workspace_id"
}

# --- MAIN ---
if [[ $# -ne 1 ]]; then
    echo "Usage: $0 <direction>" >&2
    exit 1
fi
DIRECTION=$1

PRE_JSON=$(get_active_window)
PRE_POS=$(echo "$PRE_JSON" | jq ".at")

# Try native hy3 move first
hyprctl dispatch hy3:movewindow "$DIRECTION"
sleep 0.05

POST_JSON=$(get_active_window)
POST_POS=$(echo "$POST_JSON" | jq ".at")

if [[ "$PRE_POS" != "$POST_POS" ]]; then
    exit 0
fi

# Fallback: move to neighbor monitor
move_to_neighbor_monitor "$DIRECTION" "$PRE_JSON"
